# Задача 1. Урок информатики 2
# не решено !!!!!!!!!!----------------------------------------------------------
# start_number = float(input("Введите число: "))
# count = 0
# while start_number > 10:
#     count += 1
#     start_number /= 10
#
# print(f"Формат плавающей точки: x = {start_number} * 10 ** {count}")
# #-------------------
# def tochkab(x):
#   k, temp = 0, ''
#   while x > 10:
#     x /= 10
#     k += 1
#   temp = str(x) + ' * 10 ** ' + str(k)
#   return temp

# num_b = float(input("Введите число: "))
# num_a = 0
#
# if num_b <= 1:
#   while num_b <= 1:
#     num_b *= 10
#     num_a -= 1
#
# elif num_b >= 10:
#   while num_b >= 10:
#     num_b /= 10
#     num_a += 1
#
# print(f'"Формат плавающей точки: x = " {num_b} "* 10 ** " {num_a}')

# -----------------------------------------------------

# Задача 2. Функция максимума

# def maximum_of_two(num_1, num_2):
#     if num_1 > num_2:
#         return num_1
#     else:
#         return num_2
#
# def maximum_of_three(num_1, num_2, num_3):
#     if maximum_of_two(num_1, num_2) > num_3:
#         return maximum_of_two(num_1, num_2)
#     else:
#         return num_3
#
# number_1 = float(input("Введите 1 число: "))
# number_2 = float(input("Введите 2 число: "))
# number_3 = float(input("Введите 3 число: "))
#
# print(maximum_of_three(number_1, number_2, number_3))

# -----------------------------------------------------

print('Задача 3. Число наоборот 2')

# Пользователь вводит два числа — N и K.
# Напишите программу,
# которая заменяет каждое число на число,
# которое получается из исходного записью его цифр в обратном порядке,
# затем складывает их,
# снова переворачивает и выводит ответ на экран.

# Пример:

# Введите первое число: 102
# Введите второе число: 123


# Первое число наоборот: 201
# Второе число наоборот: 321

# Сумма: 522
# Сумма наоборот: 225

# Функция добавляет введенный номер в список и разворачивает список

# def reverse(number):
#     num_list = []
#     for n in number:
#         num_list.append(int(n))
#
#     num_list.reverse()
#     return num_list
#
# # функция печатает список в виде цифр
# def list_p(num_list):
#     for n in num_list:
#         print(n, end='')
#
#     print()
#
# # функция суммирует значения в двух списках
# def sum_list(lst_1, lst_2):
#     result = []
#     for n, i in enumerate(lst_1):
#         result.append(i + lst_2[n])
#
#     return result
#
# # Функция разворачивает список
# def list_rev(lst):
#     lst.reverse()
#     return lst
#
# number_n = str(input('Введите первое число: '))
# number_k = str(input('Введите второе число: '))
#
# rev_lst_n = reverse(number_n)
# rev_lst_k = reverse(number_k)
# sum_list_n_k = sum_list(rev_lst_n, rev_lst_k)
#
#
# print('\nПервое число наоборот:', end=' ')
# list_p(rev_lst_n)
#
# print('Второе число наоборот:', end=' ')
# list_p(rev_lst_k)
#
# print('Сумма:', end=' ')
# list_p(sum_list_n_k)
#
# print('\nСумма наоборот:', end=' ')
#
# sum_reverse = list_rev(sum_list_n_k)
# list_p(sum_reverse)
# print('')

# ---------------------- 2 способ -------------------------

# def reverse1():
#     number1 = int(input("Введите целое число: "))
#     number2 = 0
#     while number1 > 0:
#         last = number1 % 10
#         number1 = number1 // 10
#         number2 = number2 * 10
#         number2 = number2 + last
#
#     return number2
#
# def reverse2(number1):
#     number2 = 0
#     while number1 > 0:
#         last = number1 % 10
#         number1 = number1 // 10
#         number2 = number2 * 10
#         number2 = number2 + last
#     return number2
#
# num_1 = reverse1()
# num_2 = reverse1()
# summ = num_1 + num_2
# summ_2 = reverse2(summ)
#
# print(f'Первое число наоборот: {num_1}')
# print(f'Второе число наоборот: {num_2}')
# print(f'Сумма: {summ}')
# print(f'Сумма наоборот: {summ_2}')


# -----------------------------------------------------
print('Задача 4. Недоделка 2')

# Вы всё так же работаете в конторе по разработке игр и смотрите различные программы прошлого горе-программиста. В одной из игр для детей, связанной с мультяшной работой с числами, вам нужно было написать код согласно следующим условиям: программа получает на вход два числа; в первом числе должно быть не менее трёх цифр, во втором — не менее четырёх, иначе программа выдаёт ошибку. Если всё нормально, то в каждом числе первая и последняя цифры меняются местами, а затем выводится их сумма.

# И тут вы натыкаетесь на программу, которая была написана предыдущим программистом и которая как раз решает такую задачу. Однако старший программист попросил вас немного переписать этот код, чтобы он не выглядел так ужасно. Да и вам самим становится, мягко говоря, не по себе от него.

# Постарайтесь разделить логику кода на три отдельные логические части (функции):
# count_numbers — получает число и возвращает количество цифр в числе;
# change_number — получает число, меняет в нём местами первую и последнюю цифры и возвращает изменённое число;
# main — функция ничего не получает на вход, внутри она запрашивает нужные данные от пользователя, выполняет дополнительные проверки и вызывает функции 1 и 2 для выполнения задачи (проверки и изменения двух чисел).

# Разбейте приведённую ниже программу на функции. Повторений кода должно быть как можно меньше. Также сделайте, чтобы в основной части программы был только ввод чисел, затем изменённые числа и вывод их суммы.

# получает число и возвращает количество цифр в числе;
# def count_numbers(number):
#     num_count = 0
#     temp = number
#     while temp > 0:
#         num_count += 1
#         temp = temp // 10
#
#     return num_count
#
# # получает число, меняет в нём местами первую и последнюю цифры и возвращает изменённое число
# def change_number(number, num_count):
#     temp = number
#     while temp > 0:
#         temp //= 10
#         last_digit = number % 10
#         first_digit = number // 10 ** (num_count - 1)
#         between_digits = number % 10 ** (num_count - 1) // 10
#         number = last_digit * 10 ** (num_count - 1) + between_digits * 10 + first_digit
#     return number
#
# def main():
#     while True: # Дмитрий!! не могу понять, почему не разворачивается 4х значное число?? Где ошибка ?
#         first_n = int(input("Введите первое число: "))
#
#         if count_numbers(first_n) < 3:
#             print("В первом числе меньше трёх цифр.")
#             break
#         else:
#             print(f'Изменённое первое число: {change_number(first_n, count_numbers(first_n))}')
#
#         second_n = int(input("\nВведите второе число: "))
#
#         if count_numbers(second_n) < 4:
#             print("Во втором числе меньше четырёх цифр.")
#             break
#         else:
#             print(f'Изменённое второе число: {change_number(second_n, count_numbers(second_n))}')
#
#         print('\nСумма чисел:', first_n + second_n)
#
#
#
# main()


# -----------------------------------------------------
print('Задача 5. Маятник ')
# Известно, что амплитуда качающегося маятника с каждым разом затухает
# на 8,4% от амплитуды прошлого колебания.
# Если качнуть маятник,
# то, строго говоря, он не остановится никогда,
# просто амплитуда будет постоянно уменьшаться до тех пор,
# пока мы не сочтём такой маятник остановившимся.

# Напишите программу,
# определяющую, сколько раз качнётся маятник, прежде чем он, по нашему мнению, остановится.

# Программа получает на вход
# начальную амплитуду колебания в сантиметрах
# и конечную амплитуду его колебаний,
# которая считается остановкой маятника.

# Обеспечьте контроль ввода.

# Пример:

# Введите начальную амплитуду: 1
# Введите амплитуду остановки: 0.1

# Маятник считается остановившимся через 27 колебаний

# start_amplitude = float(input('Введите начальную амплитуду:'))
# end_amplitude = float(input('Введите амплитуду остановки:'))
# damping = start_amplitude / 100 * 8.4
# count = 0
# while start_amplitude > end_amplitude:
#     start_amplitude = start_amplitude * (1 - damping)
#     count += 1
# print(f'Маятник считается остановившимся через {count} колебаний')
# -----------------------------------------------------

print('Задача 6. Яйца')


# В рамках программы колонизации Марса
# компания «Спейс Инжиниринг» вывела особую породу черепах,
# которые, по задумке, должны размножаться, откладывая яйца в марсианском грунте.
# Откладывать яйца слишком близко к поверхности опасно из-за радиации,
# а слишком глубоко — из-за давления грунта и недостатка кислорода.
# Вообще, факторов очень много,
# но специалисты проделали большую работу и предположили,
# что уровень опасности для черепашьих яиц рассчитывается по формуле
# D = x**3 − 3x**2 − 12x + 10,
# где x — глубина кладки в метрах,
# а D — уровень опасности в условных единицах.
#
# Для тестирования гипотезы
# нужно взять пробу грунта на безопасной, согласно формуле, глубине.
#
# Напишите программу,
# находящую такое значение глубины "х", при котором уровень опасности как можно более близок к нулю.
# На вход программе подаётся максимально допустимое отклонение уровня опасности от нуля,
# а программа должна рассчитать приблизительное значение "х",
# удовлетворяющее этому отклонению.
#
# Известно, что глубина точно больше нуля и меньше четырёх метров.
#
# Обеспечьте контроль ввода.
#
# Пример:
# Введите максимально допустимый уровень опасности: 0.01
#
# Приблизительная глубина безопасной кладки: 0.732421875 м

# def calc_deep(start, end):
#     return start + (end - start) / 2
#
#
# def calc_danger(num):
#     return num ** 3 - 3 * num ** 2 - 12 * num + 10
#
#
# max_danger = float(input('Введите максимально допустимый уровень опасности:'))
# deep_top = 0
# deep_bottom = 4
#
# if max_danger <= 0:
#     print('Ошибка. Максимально допустимый уровень должен быть больше 0')
# else:
#     deep = calc_deep(deep_top, deep_bottom)
#     danger = calc_danger(deep)
#
#     while abs(danger) > max_danger:
#         if danger > 0:
#             deep_top = deep
#         else:
#             deep_bottom = deep
#         deep = calc_deep(deep_top, deep_bottom)
#         danger = calc_danger(deep)
#
#     print(f'Приблизительная глубина безопасной кладки: {deep} м' )
