print('Задача 1. Календарь')

# Мы продолжаем разрабатывать удобный календарь для смартфона.
# Функцию определения високосного года мы добавили,
# но забыли ещё много разных очевидных вещей.
#
# Напишите программу,
# которая принимает от пользователя день недели в виде строки и выводит его номер на экран.
#
# Пример:
# Введите день недели: вторник
# Номер дня недели: 2

# count = 0
# user_day = input('Введите день недели:')
# week = ('Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', 'Воскресенье')
#
# for day in week:
#     count += 1
#     if user_day.lower() == day.lower():
#         print(f'Номер дня недели: {count}')

# -------------------------------------------------------
print('Задача 2. Я стал новым пиратом!')

# Старому капитану необходимо пополнить команду.
# Но попадут на его корабль только достойные!
# Он отобрал 10 человек и те, кто из них крикнет слово “Карамба”, попадут на борт.
#
# Пользователь вводит 10 слов.
#
# Напишите программу,
# которая определяет, сколько из них совпадают со словом “Карамба”.

# correct_word = 'Карамба'
# count = 0
# for w in range(10):
#     user_word = input(f'Введите {w + 1} слово: ')
#     if user_word.lower() == correct_word.lower():
#         print('Слова совпадают, ты достоен!')
#         count += 1
# print(f'Слова совпали {count} раз(а)')


# -------------------------------------------------------
print('Задача 3. Кривой мессенджер')

# При передаче сообщений в одном мессенджере иногда возникают неполадки
# и в сообщение попадает лишний символ - звёздочка.
# Пользователям это изрядно надоело, и они начали просто уходить в другие мессенджеры.
# Хотя одному пользователю стало интересно, на каких обычно позициях появляется эта звёздочка.
#
# Пользователь вводит строку,
# в которой встречается символ “*” ровно один раз.
#
# Напишите программу,
# которая определяет порядковый номер этого символа в строке.
#
# Пример:
# Введите текст: Пр*ивет как дела
# Символ ‘*’ стоит на позиции 3

# user_input = input(f'Введите текст: ') or 'Пр*ивет как дела'
# count = 0
# for n in user_input:
#     count += 1
#     if n == '*':
#       print(f'Символ ‘*’ стоит на позиции {count}')

# -------------------------------------------------------
print('Задача 4. Театр')

# Планируется построить театр под открытым небом,
# но для начала нужно хотя бы примерно понять сколько должно быть рядов,
# сидений в них и какое лучше сделать расстояние между рядами.
#
# Напишите программу,
# которая получает на вход кол-во рядов, сидений и свободных метров между рядами,
# а затем выводит примерный макет театра на экран.

# Сцена
# Введите кол-во рядов: 5
# Введите кол-во сидений ряду: 7
# Введите кол-во метров между рядами: 3
#
# ======= *** =======
# ======= *** =======
# ======= *** =======
# ======= *** =======
# ======= *** =======


# line = int(input(f'Введите кол-во рядов: ')) or 5
# seat = int(input(f'Введите кол-во сидений ряду: ')) or 7
# between = int(input(f'Введите кол-во метров между рядами: ')) or 3
#
# print('\t\tСцена')
#
# for i in range(line):
#     print()
#     for n in range(seat):
#         print('=', end='')
#
#     print(' ', end='')
#
#     for n in range(between):
#         print('*', end='')
#
#     print(' ', end='')
#
#     for n in range(seat):
#         print('=', end='')
# print()
# for n in range(line):
#     print('*', end=" ")
#     for i in range(5):
#         print('=', end=' ')



# -------------------------------------------------------
print('Задача 5. Марсоход 2')

# К роботу Валли отправили ещё одного робота Билли.
# Это его первый поход на Марс,
# поэтому он тестируется в прямоугольном помещении размером 15 на 20 метров.
# Марсоход высаживается в центре комнаты (в точке 8, 10),
# после чего управление им передаётся оператору - пользователю вашей программы.
#
# Программа спрашивает
# в какую сторону оператор хочет направить робота:
# север (клавиша W),
# юг (клавиша S),
# запад (клавиша A)
# или восток (клавиша D).
#
# Оператор делает выбор,
# марсоход перемещается на 1 метр в эту сторону и программа сообщает новую позицию марсохода.
# Если марсоход упёрся в стену,
# то он не должен пытаться перемещаться в сторону стены, в этом случае его позиция не меняется.
#
# Пример:
#
# [Программа]: Марсоход находится на позиции 6, 19, введите команду:
# [Оператор]: A
# [Программа]: Марсоход находится на позиции 5, 19, введите команду:
# [Оператор]: W
# [Программа]: Марсоход находится на позиции 5, 20, введите команду:
# [Оператор]: W
# [Программа]: Марсоход находится на позиции 5, 20, введите команду:


# position_x = 8
# position_y = 10
# while True:
#     if 1 <= position_x <= 15 and 1 <= position_y <= 20:
#         print(f'[Программа]: Марсоход находится на позиции'
#               f' {position_x},{position_y}, [q]-выход, [w]-вверх, [s]-вниз, [a]-влево, [в]-вправо'
#               f' введите команду: ')
#         position = input('[Оператор]: ')
#         if position.lower() == 'w':
#             position_x += 1
#         elif position.lower() == 's':
#             position_x -= 1
#         elif position.lower() == 'a':
#             position_y -= 1
#         elif position.lower() == 'd':
#             position_y += 1
#         elif position == 'q':
#             break
#
#     elif position_x < 1:
#         position_x = 1
#
#     elif position_x > 15:
#         position_x = 15
#
#     elif position_y < 1:
#         position_y = 1
#
#     elif position_y > 20:
#         position_y = 20


# -------------------------------------------------------
print('Задача 6. Спецшифр')

# Два сотрудника спецслужб переписываются необычным шифром.
# Каждую букву они шифруют в виде строки,
# внутри которой есть длинная последовательность букв “s”,
# а длина самой длинной - это и есть номер буквы алфавита, которую хотят отправить.
#
# Напишите программу,
# которая получает на вход строку,
# подсчитывает в ней самую длинную последовательность подряд идущих букв “s” и выводит ответ на экран.
#
# Пример:
# Введите строку: ssbbbsssbc
# Самая длинная последовательность: 3

# user_string = input('Введите строку: ')
# count = 0
# count_max = 0
#
# for n in user_string:
#     letter = n
#     if n == 's':
#         count += 1
#         if count > count_max:
#             count_max = count
#     else:
#         count = 0
# print(count_max)

# -------------------------------------------------------
print('Задача 7. Великий и могучий')

# Паоло изучает русский язык: занимается по учебникам, читает книги, слушает музыку.
# Особенно Паоло понравилась книга “Преступление и наказание”.
# И ему стало интересно,
# какое можно найти самое длинное слово в этой книге, чтобы потом сравнить его с аналогом на своём языке.
#
# Напишите программу,
# которая получает на вход текст и находит длину самого длинного слова в нём.
# Слова в тексте разделяются одним пробелом.
#
# Пример:
# Введите текст: Меня зовут Петр
# Длина самого длинного слова: 5

# world_count = ''
#
# user_text = input('Введите текст: ')
#
# for world in user_text.split(' '):
#     if len(world) >= len(world_count):
#         world_count = world
#
# print(f'Длина самого длинного слова: {len(world_count)}')


# -------------------------------------------------------
print('Задача 8. Колонтитул')

# Нам нужно написать программу для печати важных объявлений.
# Сверху объявления должен располагаться вот такой колонтитул:
#  ~~~~~~~~~~!!!!!!~~~~~~~~~~
# Восклицательные знаки всегда располагаются по центру строки,
# причём в зависимости от важности объявления количество восклицательных знаков может быть разным.
#
# Напишите программу,
# которая спрашивает у пользователя сначала общую длину колонтитула в символах,
# потом желаемое количество восклицательных знаков,
# после чего выводит на экран готовую строку.

total_char = int(input('общая длинна колонтитула в символах: '))
exclamation_mark = int(input('количество восклицательных знаков: '))
no_exclamation = total_char - exclamation_mark
half = no_exclamation // 2
for l in range(1):
    print('~' * half, end='')
    for i in range(exclamation_mark):
        print('!', end='')
    print('~' * half, end='')
    print()

# -------------------------------------------------------
print('Задача 9. Коровы')

# Для коров есть 10 стойл.
# В каждом стойле разные условия для животных, поэтому и молока они дают по-разному.
# В первом стойле производят 2 литра в день,
# во втором 4,
# в третьем - 6, потом 8, 10, 12, 14, 16, 18, 20.
# Но коровы стоят не во всех стойлах.
# Свободные и занятые обозначаются строкой из букв a и b,
# где a - свободное стойло, b - занятое.
#
# Пользователь вводит строку из 10 символов a и b.
# Необходимо определить, сколько в итоге будет произведено молока за день.

# user_input = 'baabbaaaba'#input('введите строку из 10 символов a и b: ') #ответ 38
# total_milk = 0
# count = 0
#
# for i in user_input:
#     count += 2
#     if i == 'b':
#         total_milk = count + total_milk
#
# print(f'Всего молока {total_milk} литров')

# for n in range(len(user_input)):
#     if user_input[n] == 'b':
#         total_milk = total_milk + (n * 2)
# print(f'Всего молока {total_milk} литров')

# -------------------------------------------------------

print('Задача 10. Метод бутерброда')

# Секретное агентство «Super-Secret-no» решило
# для шифрования переписки своих сотрудников использовать «метод бутерброда».
# Сначала буквы слова нумеруются в таком порядке:
# первая буква получает номер 1,
# последняя буква - номер 2,
# вторая – номер 3,
# предпоследняя – номер 4, потом третья … и так для всех букв (см. рисунок).
# Затем все буквы записываются в шифр в порядке своих номеров.
#
# Например, слово «sandwich» зашифруется в «shacnidw».
#
# К сожалению, программист «Super-Secret-no», написал только программу шифрования и уволился.
# И теперь агенты не могут понять, что же они написали друг другу. Помогите им.
#
# Пример:
# Введите зашифрованное сообщение: shacnidw
# Расшифрованное сообщение: sandwich
#          1   3   5   7   8   6   4   2
# Слово: | s | a | n | d | w | i | c | h |
#
# Шифр:  | s | h | a | c | n | i | d | w |
#         0   1   2   3   4   5   6   7
#Слово: | s | a | n | d | w | i | c | h |
#          0   7   1   6   2   5   3   4
# Шифр:  | s | h | a | c | n | i | d | w |

word = []
code = 'shacnidw'#input('Введите зашифрованное сообщение: ') #'shacnidw'
str1 = ''
str2 = ''
#
# for n in range(len(code)):
#     if n % 2 == 0:
#         str1 += code[n]
#     elif n % 2 != 0:
#         str2 = code[n] + str2
# print(str1+str2)


# for n in range(len(code)):
#     if n == 0:
#         word.append(code[0])
#     elif n == 1:
#         word.append(code[2])
#     elif n == 2:
#         word.append(code[4])
#     elif n == 3:
#         word.append(code[6])
#     elif n == 4:
#         word.append(code[7])
#     elif n == 5:
#         word.append(code[5])
#     elif n == 6:
#         word.append(code[3])
#     elif n == 7:
#         word.append(code[1])
# print('Расшифрованное сообщение: ', end='')
# for letter in word:
#     print(letter, end='')
# print()
