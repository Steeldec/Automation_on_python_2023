print('Задача 1. Сумма чисел')

# Напишите функцию summa_n,
# которая принимает одно целое положительное число N
# и выводит сумму всех чисел от 1 до N включительно.
#
# Пример работы программы:
# Введите число: 5
#
# Я знаю, что сумма чисел от 1 до 5 равна 15

# def summa_n(num):
#     count = 0
#     for n in range(1, num + 1):
#         count += n
#     print(f'Я знаю, что сумма чисел от 1 до {num} равна {count}\n')
#
# num = int(input('Введите число: '))
#
# summa_n(num)

# -----------------------------------------------
print('Задача 2. Функция в функции')

# Евгений проходит специальный тест по программированию.
# У него всё шло хорошо, пока он не наткнулся на тему “Функции”.
#
# Задание звучит так:
# Основная ветка программы, не считая заголовков функций, состоит из одной строки кода.
#
# Это вызов функции test().
# В ней запрашивается на ввод целое число.
# Если оно положительное, то вызывается функция positive(),
# тело которой содержит команду вывода на экран слова "Положительное".
#
# Если число отрицательное, то вызывается функция negative(),
# ее тело содержит выражение вывода на экран слова "Отрицательное".
#
# Помогите Евгению и реализуйте такую программ

# def positive():
#     print('Положительное')
#
#
# def negative():
#     print('Отрицательное')
#
#
# def test():
#     number = int(input('Введите целое число: '))
#     if number > 0:
#         positive()
#     else:
#         negative()
#
#
# test()

# -----------------------------------------------
print('Задача 3. Апгрейд калькулятора')

# Степан использует калькулятор для расчёта суммы и разности чисел, но на работе ему требуются не только обычные арифметические действия.
# Он ничего не хочет делать вручную, поэтому решил немного расширить функционал калькулятора.

# Напишите программу, запрашивающую у пользователя число и действие, которое нужно сделать с числом: вывести сумму его цифр, максимальную или минимальную цифру.

# Каждое действие оформите в виде отдельной функции, а основную программу зациклите.

# Запрошенные числа должны передаваться в функции суммы, максимума и минимума при помощи аргументов.

# def summ(number):
#     count = []
#     for n in number:
#         count.append(int(n))
#     print(f'Сумма цифр {sum(count)}')
#
# def maximum(number):
#     max_list = []
#     for n in number:
#         max_list.append(n)
#     print(f'максимальная цифра {max(max_list)}')
#
# def minimum(number):
#     min_list = []
#     for n in number:
#         min_list.append(n)
#     print(f'минимальная цифра {min(min_list)}')
#
# while True:
#     number = str(input('Введите число: '))
#     action = int(input('Что будем делать? 1 - сумма цифр, 2 - найти максимальную цифру, 3 - найти минимальную цифру,'
#                        ' 4 - выход из цикла:  '))
#     if action == 1:
#         summ(number)
#
#     elif action == 2:
#         maximum(number)
#
#     elif action == 3:
#         minimum(number)
#
#     elif action == 4:
#         break
#
#     else:
#         print('Ошибка ввода, Введите 1, 2, 3 или 4')


# -----------------------------------------------
print('Задача 4. Число наоборот')

# Вводится последовательность чисел,
# которая оканчивается нулём.
#
# Реализуйте функцию,
# которая принимает в качестве аргумента каждое число,
# переворачивает его и выводит на экран.

# Пример:
# Введите число: 1234
# Число наоборот: 4321
#
# Введите число: 1000
# Число наоборот: 0001
#
# Введите число: 0
# Программа завершена!
#
# Дополнительно: добейтесь такого вывода чисел, если в его начале идут нули.
#
# Введите число: 1230
# Число наоборот: 321
#
# Кстати, нули, которые мы убрали, называются ведущими.

# def reverse(number):
#     num_list = []
#     for n in number:
#         num_list.append(n)
#
#     num_list.reverse()
#
#     # Обычная работа
#     for i in num_list:
#         print(i, end='')
#
#     # Дополнительно: добейтесь такого вывода чисел, в начале которых идут нули.
#     # if num_list[0] == '0':
#     #     for i in num_list[1:]:
#     #         print(i, end='')
#
#     print()
#
# while True:
#     number = str(input('Введите число: '))
#     if number == '0':
#         print('Программа завершена!')
#         break
#     reverse(number)
# -----------------------------------------------
print('Задача 5. Текстовый редактор')

# Мы продолжаем разрабатывать новый текстовый редактор,
# и в этот раз нам поручили написать для него код,
# который считает количество любой буквы
# и любой цифры в тексте (а не только буквы Ы как раньше).
#
# Напишите функцию count_letters,
# которая принимает на вход текст и подсчитывает,
# какое в нём количество цифр K и букв N.
#
# Функция должна вывести на экран информацию
# о найденных буквах и цифрах в определенном формате.
#
# Пример:
# Введите текст: 100 лет в обед
# Какую цифру ищем? 0
# Какую букву ищём? л
#
# Количество цифр 0: 2
# Количество букв л: 1

# def count_letters(text, digit, letter):
#     digit_count = 0
#     letter_count = 0
#     for l in text:
#         if l == digit:
#             digit_count += 1
#         elif l.lower() == letter.lower():
#             letter_count += 1
#
#     print(f'Количество цифр {digit}: {digit_count}')
#     print(f'Количество букв {letter.upper()}: {letter_count}')
#
#
# text = input('Введите текст: ')
# digit = input('Какую цифру ищем? ')
# letter = input('Какую букву ищем? ')
# count_letters(text, digit, letter)

# -----------------------------------------------
print('Задача 6. НОД')

# Напишите функцию, вычисляющую наибольший общий делитель двух чисел
# import math
#
#
# def gcd(num1, num2):
#     print(f'наибольший общий делитель чисел {num1} и {num2} это', math.gcd(num1, num2))
#
#
# gcd(60, 48)
#
# def gcd2(x, y):
#     x_count = 1
#     y_count = 1
#     x_list = []
#     y_list = []
#     x_y_list = []
#
#     while x >= x_count:
#         if x % x_count == 0:
#             x_list.append(x_count)
#         x_count += 1
#
#     while y >= y_count:
#         if y % y_count == 0:
#             y_list.append(y_count)
#         y_count += 1
#
#     for n in x_list:
#         if n in y_list:
#             x_y_list.append(n)
#     print(f'наибольший общий делитель чисел {x} и {y} это', max(x_y_list))
#
# gcd2(60, 48)



# -----------------------------------------------
print('Задача 7. Недоделка')

# Вы пришли на работу в контору по разработке игр,
# целевая аудитория которых - дети и их родители.
#
# У прошлого программиста было задание
# сделать две игры в одном приложении, чтобы пользователь мог выбирать одну из них.
#
# Однако программист, на место которого вы пришл
# и, перед увольнением не успел сделать эту задачу и оставил только небольшой шаблон проекта.
#
# Используя этот шаблон,
# реализуйте игры «Камень, ножницы, бумага» и «Угадай число».
#
# Правила игры «Камень, ножницы, бумага»:
# программа запрашивает у пользователя строку
# и выводит победил он или проиграл.
#
# Камень бьёт ножницы, ножницы режут бумагу, бумага кроет камень.
#
# Правила игры “Угадай число”:
# программа запрашивает у пользователя число до тех пор, пока он его не отгадает.
# import random
# import sys
#
#
# def rock_paper_scissors_menu():
#     choise = int(input(f'\nИгра «Камень, ножницы, бумага»\n1 - Начать игру\n'
#                        f'2 - Прочитать правила\n3 - Вернуться в главное меню\n'))
#     if choise == 1:
#         rock_paper_scissors()
#     elif choise == 2:
#         print('Камень бьёт ножницы, ножницы режут бумагу, бумага кроет камень.')
#         rock_paper_scissors_menu()
#     elif choise == 3:
#         mainMenu()
#     else:
#         print('Ошибка ввода!')
#         rock_paper_scissors_menu()
#
#
# def rock_paper_scissors():
#     cpu_list = ['Камень', 'Ножницы', 'Бумага']
#     action = int(input(f'\nВыберите действие:'
#                        f'\n1 - {cpu_list[0]}\n2 - {cpu_list[1]}\n3 - {cpu_list[2]}\n4 - Вернуться в главное  меню\n'))
#     if action == 4:
#         mainMenu()
#     elif action > 4 or action <= 0:
#         print('Ошибка ввода!')
#         rock_paper_scissors()
#
#     cpu_choise = random.choice(cpu_list)
#     user_choise = cpu_list[action - 1]
#     print(f'Вы выбрали {user_choise}')
#     print(f'У Компьютера {cpu_choise}')
#     if user_choise == cpu_choise:
#         print('Ничья')
#         rock_paper_scissors()
#     elif user_choise == 'Камень':
#         if cpu_choise == 'Ножницы':
#             print('Победа!')
#             rock_paper_scissors()
#         else:
#             print("Поражение")
#             rock_paper_scissors()
#
#     elif user_choise == 'Ножницы':
#         if cpu_choise == 'Бумага':
#             print('Победа!')
#             rock_paper_scissors()
#         else:
#             print("Поражение")
#             rock_paper_scissors()
#
#     elif user_choise == 'Бумага':
#         if cpu_choise == 'Камень':
#             print('Победа!')
#             rock_paper_scissors()
#         else:
#             print("Поражение")
#             rock_paper_scissors()
#
#
# def guess_the_number():
#     print('\n Игра «Угадай число»\n ')
#     choise = int(input(f'\n1 - Начать игру\n2 - Прочитать правила\n3 - Вернуться в главное меню\n'))
#     if choise == 1:
#         random_number = random.randint(1, 20)
#         # print(random_number)
#         count = 0
#         while True:
#             user_number = int(input('Введите число от 1 до 20\n'))
#             count += 1
#             if user_number == random_number:
#                 print(f'Вы угадали! Число попыток: {count}')
#                 guess_the_number()
#             elif user_number > random_number:
#                 print('Число больше, чем нужно. Попробуйте ещё раз!')
#             else:
#                 print('Число меньше, чем нужно. Попробуйте ещё раз!')
#     elif choise == 2:
#         print('Правила игры «Угадай число»: '
#               'программа запрашивает у пользователя число до тех пор, пока он не отгадает загаданное.')
#         guess_the_number()
#     elif choise == 3:
#         mainMenu()
#
#
# def mainMenu():
#     # Здесь главное меню игры
#     print(
#         '\nГлавное меню\n\n\tВыбери игру:\n\n 1 - "Камень, ножницы, бумага"\n 2 - "Угадай число"\n 3 - "Выйти из игры"')
#     choise = int(input())
#     if choise == 1:
#         rock_paper_scissors_menu()
#     elif choise == 2:
#         guess_the_number()
#     elif choise == 3:
#         sys.exit()
#     else:
#         print('Ошибка ввода!')
#         mainMenu()
#
#
# mainMenu()
